include "include/vec2.bzz"
PATH = "test.csv"

SCALER = 100.00

# sensors: 
# S0: 1 if same robot, 0 if different robot or none
# S1: 1 if different robot, 0 if same robot or none

# Weights
# W0L: weight for left wheel from sensor 1
# W0R: weight for right wheel from sensor 1
W0L = {W0L}
W0R = {W0R}

# W1L: weight for left wheel from sensor 2
# W1R: weight for right wheel from sensor 2
W1L = {W1L}
W1R = {W1R}

# WBL: weight for left wheel from bias
# WBR: weight for right wheel from bias
# WBL = {WBL}
# WBR = {WBR}
# Default to moving slowly in circles
WBL = 0.3
WBR = 0.2
f = io.fopen(PATH, "a")

### BUZZ FUNCTIONS ##
function init() {
    if (id % 2 == 0) {
        set_leds(0, 255, 0)
    } else {
        set_leds(255, 0, 0)
    }
}


function step() {
    var lws = 0.1
    var rws = 0.1
    neighbors.foreach(function (rid, data) {
        # log(id, " rid is ", rid, " at angle ", data.azimuth)
        if (data.azimuth > - 0.0872665) {
            if (data.azimuth < 0.0872665) {
                if (rid % 2 == id % 2) {
                    # log(id, " sees same in front: ", rid)
                    lws = SCALER * W0L 
                    rws = SCALER * W0R 
                    # log("set wheels next lws ", lws, " rws ", rws, " scaler ", SCALER)
                    set_wheels(lws, rws)
                    var px = pose.position.x
                    var py = pose.position.y
                    # io.fwrite(f, id, ",",lws, ",", rws, ",", px, ",", py)
                } else {
                    # log(id, " sees different in front: ", rid)
                    lws = SCALER * W1L 
                    rws = SCALER * W1R 
                    set_wheels(lws, rws)
                    var px = pose.position.x
                    var py = pose.position.y
                }
            }
        } else {
            lws = SCALER * W1L 
            rws = SCALER * W1R 
            set_wheels(lws, rws)
            # io.fwrite(f, id, ",",lws, ",", rws, ",", px, ",", py)
        }
    })
}


function reset() {
}

function destroy() {
}